buildscript {
  repositories {
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
    maven {
      url "https://repo1.maven.org/maven2"
    }
//    dependencies {
//          classpath "com.bihe0832:GradleDependenciesCheck:4.1.0"
//      }
  }
  dependencies {
    // License plugin
    classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.13.1'
    // Versions plugin
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.12.0'
    // Stats plugin
    classpath 'org.kordamp.gradle:stats-gradle-plugin:0.2.0'

    classpath 'com.bihe0832:GradleDependenciesCheck:1.0.2'
  }
}

tasks.withType(Javadoc) {
  options.encoding = "UTF-8"
  options.charSet = "UTF-8"
}

apply plugin: 'base' // To add "clean" task to the root project.
apply plugin: 'distribution'
apply plugin: 'com.github.ben-manes.versions'

apply from: "${rootDir}/gradle/common.gradle"
// apply plugin: 'maven'
// apply plugin: 'maven-publish'

group = 'org.opentcs'
version = '4.20.0-SNAPSHOT'


allprojects {
  repositories {
    maven {
      url "https://repo1.maven.org/maven2/"
    }
    maven {
      url 'https://maven.aliyun.com/repository/public/'
    }
    mavenLocal()
    mavenCentral()
  }
}

subprojects {
//  apply plugin: 'com.bihe0832.gradleDependenciesCheck'
//  GradleDependenciesCheckConfig {
//    showResultType = 1
//  }
  apply plugin: "maven-publish"
  publishing {
      repositories {
//          maven {
//              name = "GitHubPackages"
//              url = uri("https://maven.pkg.github.com/touchmii/OpenTCS-4")
//              credentials {
//                  username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
//                  password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
//              }
//          }
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
        maven {
          url "https://repo1.maven.org/maven2/"
        }
      }
//      publications {
//          gpr(MavenPublication) {
//              from(components.java)
//          }
//      }
  }
//  afterEvaluate {Project project ->
//    project.getTasks().getByName('build').dependsOn("checkGradleDependencies")
//  }
  apply from: rootProject.file('gradle/common.gradle')
}
evaluationDependsOnChildren()

distributions {
  main {
    contents.from {
      project(':openTCS-Kernel').ext.collectableDistDir
    }
    contents.from {
      project(':openTCS-KernelControlCenter').ext.collectableDistDir
    }
    contents.from {
      project(':openTCS-PlantOverview').ext.collectableDistDir
    }
    contents.from {
      project(':openTCS-Documentation').ext.collectableDistDir
    }
  }
}

task statsAggregate(type: org.kordamp.gradle.stats.AggregateStatsReportTask) {
  dependsOn subprojects*.stats
}

task subDists {
  dependsOn(':openTCS-Kernel:installDist')
  dependsOn(':openTCS-KernelControlCenter:installDist')
  dependsOn(':openTCS-PlantOverview:installDist')
  dependsOn(':openTCS-Documentation:installDist')
}

task install {
  subprojects {
    if (!it.name.hasProperty('Exclude')) {
      dependsOn it.name
    }
  }
//  subprojects {
//    if (!it.name.startsWith('openTCS-Web')) {
//      dependsOn it.name
//    }
//  }
//  dependsOn subprojects*.install
}

installDist.dependsOn subDists

distZip {
  classifier = 'bin'
  dependsOn subDists
}

distTar {
  classifier = 'bin'
  dependsOn subDists
  compression = Compression.GZIP
}

task distSrcZip(type: Zip) {
  classifier = 'src'
  from "${rootDir}"

  includes << 'config/**'
  includes << 'gradle/**'
  includes << 'openTCS-*/**'
  includes << 'src/**'
  includes << '.nb-gradle-properties'
  includes << '*.gradle'
  includes << 'gradlew'
  includes << 'gradlew.bat'

  excludes << '.gitlab'
  excludes << '.gradle'
  excludes << '**/build'
}

artifacts {
  archives distZip
  archives distSrcZip
}

build {
  dependsOn subprojects*.build
  dependsOn installDist
}

task release {
  dependsOn build
  dependsOn subprojects*.release
  dependsOn distZip
  dependsOn distSrcZip
}