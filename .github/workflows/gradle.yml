# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
on:
  push:
    # Sequence of patterns matched against refs/tags
    #tags:
    #  - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Rollback Release
        if: failure() && startsWith(github.ref, 'refs/tags/v')
        uses: author/action-rollback@stable
        #run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
        with:
          # Using a known release ID
          #id: ${{ steps.create_release.id }}
          # Using a tag name
          tag: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Connet frp
        if: ${{ failure() }}
        uses: shaowenchen/debugger-action@v1
        timeout-minutes: 30
        continue-on-error: true
        with:
          frp_server_addr: ${{ secrets.FRP_SERVER_ADDR }}
          frp_server_port: ${{ secrets.FRP_SERVER_PORT }}
          frp_token: ${{ secrets.FRP_TOKEN }}
          #ssh_port: ${{ secrets.SSH_PORT }}
          ssh_port: 26900
      - name: Setup tmate session
        if: ${{ failure()}}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 30    
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        run: ./gradlew release 
      - name: Upload Release Asset
        if: ${{ success() }} && startsWith(github.ref, 'refs/tags/v')
        #id: upload-release-asset
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          file: ./build/distributions/openTCS-*-SNAPSHOT-bin.zip
